; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = RFLink

[env]
framework = arduino
monitor_speed = 115200
;lib_ldf_mode = deep

[common]
ESPlibs =
    PubSubClient
    ArduinoJson@~6.18.5
    jgromes/RadioLib @ ~5.6
    ;https://github.com/cpainchaud/RadioLib.git#master
    ;https://github.com/me-no-dev/ESPAsyncWebServer.git#master
    ;https://github.com/boblemaire/asyncHTTPrequest.git#master
    ;https://github.com/cpainchaud/rflink-webui.git#main
    ;Wire
	;U8g2
    
ESP32_libs =
    ;Update

ESP8266_libs =
    ESP8266WiFi
    ESP8266TrueRandom

[ESP32_base]
;platform = espressif32@6.1.0
platform = espressif32                                                                       ; to try Latest espressif git
;platform_packages =                                                                             ; to try Latest espressif git
;    platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git    ; to try Latest espressif git
;board = esp32dev
board_build.filesystem = littlefs
board_build.partitions = partitions/esp32_4MB_LittleFS-327k.csv
debug_tool = esp-prog
debug_init_break = tbreak setup
monitor_filters = esp32_exception_decoder
build_src_filter = +<*> -<Plugins>
lib_deps =
	${common.ESPlibs}
    ${common.ESP32_libs}

[ESP8266_base]
platform = espressif8266@4.1.0
board = d1_mini
lib_deps = ${common.ESPlibs}
           ${common.ESP8266_libs}
monitor_filters = esp8266_exception_decoder
build_src_filter = +<*> -<Plugins>


;[env:heltec_lora32_v2]
;extends = env:genericESP32
;board = heltec_wifi_lora_32_V2
;build_flags =
;   -D RFLink_default_Radio_HardwareType=HardwareType::HW_SX1278_t
;   -D RFLINK_WIFI_ENABLED
;   -D PIN_RF_RX_DATA=34
;   -D PIN_RF_RX_CS=18
;   -D PIN_RF_RX_RESET=14

[env:IDkonnecT]
;*****************************************************************************************
; Generic IDkonnecT environement :
;*********************************
;framework = arduino
;platform = espressif32
board = esp-wrover-kit ;lolin32

;board_build.filesystem = littlefs   ; spiffs / littlefs
;board_build.partitions = partitions/default_16MB.csv           ; => pour ESP32 WROVER E XX0H28 =128Mb	=16Mo   => Moi
;board_build.partitions = partitions/esp32_4MB_LittleFS-327k.csv ; => pour ESP32 WROVER B XX0H32 = 32Mb	= 4Mo	=> Papa et Moi
board_build.f_flash = 80000000L ; 80000000L
board_build.flash_mode = dio    ; /!\ qio va 2x + vite que dio mais ne fonctionne pas sur tous les ESP32 !
upload_speed = 921600           ;115200 ;256000 ;512000 ;921600
upload_resetmethod = ck
monitor_rts = 0
monitor_dtr = 0
;monitor_speed = 115200
;debug_tool = esp-prog
;debug_init_break = tbreak setup
;monitor_filters = esp32_exception_decoder

build_type = release  ; release ou debug (symbolic debug information, no optimization) => /!\ debug not possible with RFLink plugins /!\
;build_flags =
;    -Os                     ; Optimise Compile Size
;    -D CORE_DEBUG_LEVEL=1   ; <=5 pour supprimer les log de Preferences.h
;build_unflags =
;    -O2 ; Optimise Compile Speed

lib_ldf_mode = deep+
;*****************************************************************************************

extends = ESP32_base
build_flags =
    -D IDkonnecT
;    -D RFLINK_WIFI_ENABLED
;    -D RFLINK_MQTT_DISABLED
;    -D RFLINK_PORTAL_DISABLED
;    -D RADIOLIB_DEBUG
;    -D RFLINK_SIGNAL_RSSI_DEBUG
;    -D DEBUG_RFLINK_CONFIG
;	 -D RFLINK_OTA_ENABLED
;	 -D RFLINK_OTA_PASSWORD='"'${sysenv.OTA_SEC}'"'
;    -D RFLINK_SERIAL2NET_DEBUG
;    -DCORE_DEBUG_LEVEL=5
; disable SSL capabilities in PubSubClient to save memory
;    -D RFLINK_MQTT_CLIENT_SSL_DISABLED
; strips out all the radio pin config code and saves memory
;    -D RFLINK_USE_HARDCODED_RADIO_PINS_ONLY
; Others :
;    -D TARGET_BOARD_ESP8285
;    -D ARDUINOJSON_USE_LONG_LONG
;    -D FIRMWARE_UPGRADE_VIA_WEBSERVER_DISABLED
;    -D RFLINK_NO_RADIOLIB_SUPPORT
; IDkonnecT specific :
    -D WM_DEBUG_LEVEL=DEBUG_VERBOSE ; Debug Level pour WiFiManager : WM_DEBUG_SILENT, DEBUG_ERROR, DEBUG_NOTIFY, DEBUG_VERBOSE, DEBUG_DEV, DEBUG_MAX
    -D esp32autoreconnect           ; Pour ESP32 : fait les AutoReconnect WiFi par Event Handler (fonction native NOK)

lib_deps =
    ${common.ESPlibs}
    ${common.ESP32_libs}
    https://github.com/tzapu/WiFiManager.git#88c378f ; v2.0.16-rc.2
    https://github.com/h2zero/NimBLE-Arduino#1.4.3
